     /* **************************************************************************** */
     /* *** Program name:?CVTSPLFC                             Date:?2005-08-09  *** */
     /* **************************************************************************** */
     /* ***  Copyright - Free RPG/i5 Tools                                       *** */
     /* ***     E-Mail - Utilities@FreeRPGTools.com                              *** */
     /* ***    Purpose - Convert Spooled File                                    *** */
     /* ***                                                                      *** */
     /* ***    Maintenance History: (Most recent is listed first)                *** */
     /* ***                                                                      *** */
     /* ***    Project  Date of      Pgmr                                        *** */
     /* ***     Id.   Last Change Initials Description of Changes            *** */
     /* ***   xxxxxxx  2007-05-29   FRT       Solve problem with submitting     *** */
     /* ***                                   to batch.  MarkKey & MarkPos      *** */
     /* ***                                   are not being submitted. Still    *** */
     /* ***                                   needs to be addressed.            *** */
     /* ***   xxxxxxx  2006-12-05   FRT       Initial Creation                  *** */
     /* ***                                                                     *** */
     /* **************************************************************************** */
     /* ***?                         Indicator Usage                             *** */
     /* *** XX    Description                                                 *** */
     /* ***                                                                     *** */
     /* **************************************************************************** */
     /* ***?                          Creation Keywords                          *** */
     /* *** Keyword      Keyword Data                                          *** */
     /* *** *NONE         No Keywords used for this program                     *** */
     /* ***                                                                     *** */
     /* **************************************************************************** */
     /* ***?                     Required Programs/Commands                      *** */
     /* *** Program Name Description                                           *** */
     /* *** *NONE         No Commands/Programs are required for this Program    *** */
     /* ***                                                                     *** */
     /* **************************************************************************** */
     /* ***?                               Overrides                             *** */
     /* *** DB-File      Override                                              *** */
     /* *** *NONE         No Commands/Programs are required for this Program    *** */
     /* ***                                                                     *** */
     /* **************************************************************************** */
     /* ***?                           Parameters                                *** */
     /* *** Field     Length Usage Description                              *** */
     /* ***                                                                      *** */
     /* **************************************************************************** */
             PGM        PARM(&FromFile &ToStmf &ToDir &QualJob &SplId &ToFmt &StmfOpt +
                          &StmfCodPag &Title &BookMark &BMarkPos &BMarkKey)
             COPYRIGHT  TEXT('Copyright (c) Free RPG/i5 Tools - http:\\www.FreeRPGTools.com')
 
/* ********************************************************************************* */
/* ***Custom Program Variables                                                  *** */
/* ********************************************************************************* */
             DCL        VAR(&FromFile  ) TYPE(*CHAR) LEN( 10   )
             DCL        VAR(&ToFile    ) TYPE(*CHAR) LEN(  10  )
             DCL        VAR(&ToStmf    ) TYPE(*CHAR) LEN( 128  )
             DCL        VAR(&ToDir     ) TYPE(*CHAR) LEN( 256  )
             DCL        VAR(&QualJob   ) TYPE(*CHAR) LEN(  26  )
             DCL        VAR(&IntJob    ) TYPE(*CHAR) LEN(  16  )
             DCL        VAR(&IntSplID  ) TYPE(*CHAR) LEN(  16  )
             DCL        VAR(&Job       ) TYPE(*CHAR) LEN(  10  )
             DCL        VAR(&User      ) TYPE(*CHAR) LEN(  10  )
             DCL        VAR(&JobNbr    ) TYPE(*CHAR) LEN(   6  )
             DCL        VAR(&SplID     ) TYPE(*DEC ) LEN(   4 0)
             DCL        VAR(&HexSplID  ) TYPE(*CHAR) LEN(   4  )
             DCL        VAR(&ToFmt     ) TYPE(*CHAR) LEN(   5  )
             DCL        VAR(&StmfOpt   ) TYPE(*CHAR) LEN(   8  )
             DCL        VAR(&StmfCodPag) TYPE(*DEC ) LEN(   5 0)
             DCL        VAR(&CodePage  ) TYPE(*CHAR) LEN(   8  )
             DCL        VAR(&Title     ) TYPE(*CHAR) LEN(  50  )
             DCL        VAR(&BookMark  ) TYPE(*CHAR) LEN(   7  )
             DCL        Var(&BMarkKey  ) TYPE(*CHAR) LEN( 388  )
             DCL        Var(&SplInfo   ) TYPE(*CHAR) LEN(1133  )
             DCL        Var(&InfoLen   ) TYPE(*CHAR) LEN(   4  )
             DCL        Var(&PageLen   ) TYPE(*CHAR) LEN(   4  )
             DCL        Var(&SplNbr    ) TYPE(*CHAR) LEN(   5  )
             DCL        Var(&Path      ) TYPE(*CHAR) LEN(1024  )
             DCL        Var(&Rpyle     ) TYPE(*LGL ) LEN(      )
             DCL        Var(&RpyleSeq  ) TYPE(*DEC ) LEN(   4 0)
             DCL        Var(&RpyleSeqA ) TYPE(*CHAR) LEN(   4  )
             DCL        Var(&InqMsgRpy ) TYPE(*CHAR) LEN(  10  )
             DCL        Var(&CtlChar   ) TYPE(*CHAR) LEN(   7  ) VALUE('*NONE')
             DCL        Var(&Msgf      ) TYPE(*CHAR) LEN(  10  )
             DCL        Var(&MsgFLib   ) TYPE(*CHAR) LEN(  10  )
             DCL        Var(&MsgKey    ) TYPE(*CHAR) LEN(   4  )
             DCL        Var(&Msg       ) TYPE(*CHAR) LEN( 100  )
             DCL        Var(&Sev       ) TYPE(*DEC ) LEN(   2 0)
             DCL        Var(&ErrorFlag ) TYPE(*LGL ) LEN(   1  )
             DCL        Var(&SbmJob    ) TYPE(*CHAR) LEN(  30  )
             DCL        VAR(&BMarkPos  ) TYPE(*CHAR) LEN(   8  )
             DCL        Var(&BMarkPOSCt) TYPE(*INT ) LEN(   4  )
             DCL        Var(&BMarkPOSLn) TYPE(*DEC ) LEN(   3 0)
             DCL        Var(&BMarkPOSCr) TYPE(*DEC ) LEN(   3 0)
             DCL        Var(&BMarkPOSLg) TYPE(*DEC ) LEN(   3 0)
 
/* ********************************************************************************* */
 
/* ********************************************************************************* */
/* ***Standard Program Variables                                                *** */
/* ********************************************************************************* */
             DCL        VAR(&MsgData) TYPE(*CHAR) LEN(256)
             DCL        VAR(&MsgID) TYPE(*CHAR) LEN(7)
             DCL        VAR(&Command) TYPE(*CHAR) LEN(512)
             DCL        VAR(&Length) TYPE(*DEC) LEN(15 5) VALUE(512)
             DCL        VAR(&Tick) TYPE(*CHAR) LEN(1) VALUE(X'7D')
             DCL        VAR(&Message) TYPE(*CHAR) LEN(80)
/* ********************************************************************************* */
 
/* ********************************************************************************* */
/* ***Global message monitor to trap any unmonitored errors                     *** */
/* ********************************************************************************* */
             MONMSG     (CPF9999 CPF0000 MCH0000) EXEC(GOTO ERROR)
 
/* ********************************************************************************* */
 
/* ********************************************************************************* */
/* ***Mainline Processes                                                        *** */
/* ********************************************************************************* */
 
/* (A) Extract job name from qualified Job name  */
 
             CHGVAR     &Job     %sst(&QualJob  1 10)
             CHGVAR     &User    %sst(&QualJob 11 10)
             CHGVAR     &JobNbr  %sst(&QualJob 21  6)
 
/* (B) Convert special value * to current job details   */
 
             IF         (&Job *eq '*') DO
                RTVJOBA    JOB(&Job) USER(&User) NBR(&JobNbr)
             ENDDO
 
/* (C) Set up spooled file number from special values   */
 
             CHGVAR     &SplNbr &SplID
             IF         (&SplID *EQ -2) DO
                CHGVAR     &SplNbr '*LAST'
             ENDDO
             IF         (&SplID *EQ -3) DO
                CHGVAR     &SplNbr '*ONLY'
             ENDDO
 
/* (D) Create first work file    */
 
             DLTF       QTEMP/CVTWORK01
             MONMSG     CPF2105
             CRTPF      QTEMP/CVTWORK01 RCDLEN(378) SIZE(100000 10000 10)
             CHGVAR     &ToFile 'CVTWORK01'
 
/* (E) Create second work file   */
 
             DLTF       QTEMP/CVTWORK02
             MONMSG     CPF2105
             CRTPF      QTEMP/CVTWORK02 RCDLEN(382) SIZE(100000 10000 10)
             CHGVAR     &ToFile 'CVTWORK02'
 
/* (F) Set Job to use reply list entries                             */
 
             RTVJOBA    InqMsgRpy(&InqMsgRpy)
             CHGJOB     InqMsgRpy(*SYSRPYL)
 
/* (G) Add reply list entry for CPYSPLF message                      */
 
             CHGVAR     VAR(&Rpyle) VALUE('0')
             CHKOBJ     OBJ(ADDRPYLE) OBJTYPE(*CMD) AUT(*USE)
             MONMSG     MSGID(CPF9802) EXEC(GOTO CMDLBL(SKIPRPY))
             CHGVAR     VAR(&RpyleSeq) VALUE(9999)
 ADDRPYLE:   CHGVAR     VAR(&RpyleSeqA) VALUE(&RpyleSeq)
             CHGVAR     VAR(&Command) VALUE('ADDRPYLE SEQNBR(' *TCAT &RpyleSeqA *TCAT ') +
                          MSGID(CPA3311) ' *CAT 'RPY(' *CAT &Tick *cat 'G' *CAT &Tick *CAT ')')
             CALL       PGM(QCMDEXC) PARM(&Command &Length)
             MONMSG     CPF2555 EXEC(DO)
                CHGVAR     &RpyleSeq (&RpyleSeq -1)
                IF         (&RpyleSeq *GT 0) (GOTO ADDRPYLE)
             ENDDO
             MONMSG     CPF0000 EXEC(GOTO START)
             CHGVAR     VAR(&Rpyle) VALUE('1')
 SKIPRPY:
 
/* (H) We need control characters      */
 
 START:      CHGVAR     &CtlChar  '*PRTCTL'
 
/* (I) Set up Title if a special value                               */
             IF         (&Title *EQ '*STMFILE') DO
                CHGVAR     &Title &ToStmf
             ENDDO
             IF         (&Title *EQ '*NONE') DO
                CHGVAR     &Title ' '
             ENDDO
 
/* (J) Copy spooled file into work file                               */
 
             CPYSPLF    FILE(&FROMFILE) TOFILE(QTEMP/&TOFILE) JOB(&JOBNBR/&USER/&JOB) +
                          SPLNBR(&SPLNBR) MBROPT(*REPLACE) CTLCHAR(&CTLCHAR)
 
/* (K) Call API to get spooled file info */
 
             CHGVAR     %bin(&HexSplID) &SplID
             IF         (&SplNbr *EQ '*ONLY') (CHGVAR %bin(&HexSplID) 0)
             IF         (&SplNbr *EQ '*LAST') (CHGVAR %bin(&HexSplID) -1)
             CHGVAR     %bin(&InfoLen) 1133
             CALL       PGM(QUSRSPLA) PARM(&SplInfo &InfoLen 'SPLA0100' &QualJob &IntJob +
                          &IntSplID &FromFile &HexSplID                  )
             CHGVAR     &PageLen %sst(&SplInfo 425 4)
 
/* (L) Convert spooled file data to Text format                          */
 
             IF         (&ToFmt *EQ '*TEXT') DO
                CALL       CVTSPLFRT PARM(&PageLen)
             ENDDO
 
/* (L) Convert spooled file data to HTML format                          */
 
             IF         (&ToFmt *EQ '*HTML') DO
                CALL       CVTSPLFRH PARM(&Title &PageLen)
             ENDDO
 
/* (M) Convert spooled file data to PDF format                           */
 
             IF         (&ToFmt *EQ '*PDF') THEN(DO)
                CALL       CVTSPLFRP PARM(&Title &SplInfo &Bookmark &BMarkPos &BMarkKey     +
                             )
             ENDDO
 
/* (N) Set codepage of stream file to be created                         */
 
             CHGVAR     &CodePage &StmfCodPag
             IF         (&StmfCodPag *EQ -1) (CHGVAR &CodePage *PCASCII)
             IF         (&StmfCodPag *EQ -2) (CHGVAR &CodePage *STMF)
 
/* (O) Convert spooled file data in work file to stream file             */
 
             CHGVAR     VAR(&Path) VALUE(&TODIR *TCAT '/' *CAT &TOSTMF)
             CPYTOSTMF  FROMMBR('/qsys.lib/qtemp.lib/CVTWORK01.file/CVTWORK01.mbr') +
                          TOSTMF(&Path) STMFOPT(&STMFOPT) STMFCODPAG(&CODEPAGE)
 
/* (P) Send completion message                                           */
 
             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('Spooled file' *BCAT &FROMFILE +
                          *BCAT 'copied to stream file' *BCAT &TOSTMF) MSGTYPE(*COMP)
 
/* (Q) Delete work file(s)                                               */
 
             DLTF       FILE(QTEMP/CVTWORK01)
             MONMSG     MSGID(CPF2105)
             DLTF       FILE(QTEMP/CVTWORK02)
             MONMSG     MSGID(CPF2105)
 
/* (R) Remove reply list entry and reset job attribute if changed        */
 
             IF         (&Rpyle *EQ '1') DO
                CHGVAR     VAR(&RpyleSeqA) VALUE(&RpyleSeq)
                CHGVAR     VAR(&Command) VALUE('RMVRPYLE SEQNBR(' *TCAT &RpyleSeqA *TCAT ')')
                CALL       PGM(QCMDEXC) PARM(&Command &Length)
             ENDDO
             CHGJOB     INQMSGRPY(&InqMsgRpy)
 
/* Finish                                                            */
 
             RETURN
 
/*                                                                   */
/* Error Handling logic                                              */
/*                                                                   */
 ERROR:
/*                                                                   */
/* If looping in the error handling routine, end in error            */
/*                                                                   */
             IF         (&ErrorFlag) DO
                SNDPGMMSG  MSGID(CPF9999) MSGF(QCPFMSG) MSGTYPE(*ESCAPE)
                MONMSG     CPF0000
                GOTO       ENDPGM
             ENDDO
/*                                                                   */
/* Set flag to prevent looping                                       */
/*                                                                   */
             CHGVAR     &ErrorFlag '1'
 
/* Re-send any diagnostic messages sent to this program              */
 
 ERROR1:     RCVMSG     MSGTYPE(*DIAG) RMV(*NO) KEYVAR(&MsgKey) MSG(&Msg) MSGDTA(&MsgData) +
                          MSGID(&MsgID) MSGF(&MsgF) SNDMSGFLIB(&MsgFLib)
             IF         (&MsgKey *EQ ' ') (GOTO ERROR2)
             RMVMSG     MSGKEY(&MsgKey)
             SNDPGMMSG  MSGID(&MsgID) MSGF(&MsgFLib/&MsgF) MSGDTA(&MsgData) MSGTYPE(*DIAG)
             GOTO       CMDLBL(ERROR1)
 
/* Re-send any escape messages sent to this program                 */
 ERROR2:     IF         (&Rpyle *EQ '1') DO
                CHGVAR     VAR(&RpyleSeqA) VALUE(&RpyleSeq)
                CHGVAR     VAR(&Command) VALUE('RMVRPYLE SEQNBR(' *TCAT &RpyleSeqA *TCAT ')')
                CALL       PGM(QCMDEXC) PARM(&Command &Length)
                MONMSG     CPF0000
             ENDDO
             CHGJOB     INQMSGRPY(&InqMsgRpy)
             MONMSG     CPF0000
 
             RCVMSG     MSGTYPE(*EXCP) RMV(*NO) MSG(&Msg) MSGDTA(&MsgData) MSGID(&MsgID) +
                          SEV(&SEV) MSGF(&MsgF) SNDMSGFLIB(&MsgFLib)
             IF         (&Sev *gt 00) THEN(DO)
                SNDPGMMSG  MSGID(&MsgID) MSGF(&MsgFLib/&MsgF) MSGDTA(&MsgData) MSGTYPE(*ESCAPE)
             ENDDO
             ELSE       DO
                SNDPGMMSG  MSGID(CPF9897) MSGF(QCPFMSG) MSGDTA(&Msg) MSGTYPE(*ESCAPE)
             ENDDO
 
 ENDPGM:     ENDPGM
